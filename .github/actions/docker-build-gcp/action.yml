name: Build and publish a Docker image to GCP
description: Builds and pushes a docker image to a GCP hosted docker repository
author: "havard.bakke@pexip.com"

inputs:
  repository:
    required: true
    description: The repository to deploy to
  image_name:
    required: true
    description: Name of docker image to build and publish
  push_image:
    required: false
    description: Should the image be pushed to the repository
    default: true
  tag:
    required: false
    description: Optional tag to apply to the docker image
  dockerfile:
    required: true
    default: ./Dockerfile
    description: The docker file to use when building the image
  service_account_key:
    required: false
    description: The GCP service account JSON key used to authenticate towards Google
  service_account:
    required: false
    description: The GCP service account used to authenticate towards Google
  workload_identity_provider:
    required: false
    description: The GCP workload identity provider used to authenticate towards Google
  token:
    required: false
    description: A token used by the Dockerfile
  snyk_token:
    required: false
    description: A token used by Snyk to scan docker image for vulnerabilities

runs:
  using: "composite"
  steps:
    - name: Authenticate towards Google
      if: ${{ inputs.service_account_key != '' }}
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ inputs.service_account_key }}

    - name: Authenticate towards Google
      if: ${{ inputs.workload_identity_provider != '' }}
      uses: google-github-actions/auth@v1
      with:
        token_format: access_token
        workload_identity_provider: ${{ inputs.workload_identity_provider }}
        service_account: ${{ inputs.service_account }}

    - name: Setup gcloud SDK
      uses: google-github-actions/setup-gcloud@v1

    - name: Configure Docker repository
      working-directory: ${{ inputs.directory }}
      shell: bash
      run: gcloud auth configure-docker ${{ inputs.repository }}

    - name: Docker metadata
      id: metadata
      uses: docker/metadata-action@v5
      with:
        images: ${{ inputs.repository }}/${{ inputs.image_name }}
        tags: |
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=raw,value=${{ inputs.tag }},enable=${{ inputs.tag != '' }}
          type=raw,value=latest,enable={{is_default_branch}}
          type=sha,enable=true,priority=100,prefix=,suffix=,format=long

    - name: Set up Docker Buildx to enable caching
      uses: docker/setup-buildx-action@v3

    - name: Build and push Docker image
      env:
        TOKEN:  ${{ inputs.TOKEN }}
      uses: docker/build-push-action@v5
      with:
        context: .
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          TOKEN=${{ inputs.token }}
        file: ${{ inputs.dockerfile }}
        push: ${{ inputs.push_image }}
        tags: ${{ steps.metadata.outputs.tags }}
        labels: ${{ steps.metadata.outputs.labels }}

    - name: Configure Docker Auth for Snyk
      if: ${{ inputs.snyk_token != '' }}
      shell: bash
      run: cp ~/.docker/config.json ~/dockercfg.json

    - name: Security scan docker image
      id: snyk
      if: ${{ inputs.snyk_token != '' }}
      uses: snyk/actions/docker@master
      env:
        SNYK_TOKEN: ${{ inputs.SNYK_TOKEN }}
      with:
        image: ${{ steps.metadata.outputs.tags }}

    - name: Generate job summary
      shell: bash
      run: |
        echo "Built docker image:" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY # this is a blank line
        echo "- Name:  ${{ inputs.repository }}/${{ inputs.image_name }}" >> $GITHUB_STEP_SUMMARY        
        echo "- TAGS: ${{ steps.metadata.outputs.tags }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY # this is a blank line
