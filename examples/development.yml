name: Development pipeline
on:
  pull_request:
    branches:
      - '*'
  workflow_dispatch:
    inputs:
      environment:
        type: environment
        description: Environment to run against
        required: true

jobs:
  docker-build:
    runs-on: ubuntu-latest
    environment: development
    outputs:
      tags: ${{ steps.metadata.outputs.tags }}
      image: ${{ steps.build.outputs.image }}
      dockerfile: ${{ steps.build.outputs.dockerfile }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: pexip/shared-github-actions/.github/actions/auth-gcp@master
        id: auth-gcp
        with:
          repository: ${{ vars.DOCKER_REPO }}
          service_account_key: ${{ secrets.DEPLOY_SERVICE_ACCOUNT_KEY }}
      - uses: pexip/shared-github-actions/.github/actions/docker-build@master
        id: build
        with:
          repository: ${{ vars.DOCKER_REPO }}
          image_name: ${{ vars.DOCKER_IMAGE }}
          dockerfile: Dockerfile.debian
          service_account_key: ${{ secrets.DEPLOY_SERVICE_ACCOUNT_KEY }}

  docker-security-scan:
    needs: docker-build
    runs-on: [self-hosted, linux, X64]
    environment: development
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: pexip/shared-github-actions/.github/actions/auth-gcp@master
        id: auth-gcp
        with:
          repository: ${{ vars.DOCKER_REPO }}
          service_account_key: ${{ secrets.DEPLOY_SERVICE_ACCOUNT_KEY }}
      - uses: pexip/shared-github-actions/.github/actions/docker-security-scan@master
        with:
          image: ${{ needs.docker-build.outputs.image }}
          dockerfile: ${{ needs.docker-build.outputs.dockerfile }}
          snyk_token: ${{ secrets.SNYK_PEXIP_UNSORTED_ACCESS_TOKEN }}
          service_account_key: ${{ secrets.DEPLOY_SERVICE_ACCOUNT_KEY }}

  terraform-deploy:
    needs: docker-build
    runs-on: ubuntu-latest
    environment: development
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set Terraform variables
        shell: bash
        run: |
          echo "TF_VAR_project_id=${{ vars.DEPLOY_PROJECT_ID }}" >> $GITHUB_ENV
          echo "TF_VAR_container=${{ needs.docker-build.outputs.tags }}" >> $GITHUB_ENV
      - uses: pexip/shared-github-actions/.github/actions/auth-gcp@master
        id: auth-gcp
        with:
          repository: ${{ vars.DOCKER_REPO }}
          service_account_key: ${{ secrets.DEPLOY_SERVICE_ACCOUNT_KEY }}
      - uses: pexip/shared-github-actions/.github/actions/terraform-deploy-gcp@master
        with:
          directory: ./deploy
          repository: ${{ vars.DOCKER_REPO }}
          service_account_key: ${{ secrets.DEPLOY_SERVICE_ACCOUNT_KEY }}
          token: ${{ secrets.GITHUB_TOKEN }}